     1                                  ; nasm -f elf64 -o MyPrintf.o -l MyPrintf.lst MyPrintf.s ; ld -s -o MyPrintf MyPrintf.o
     2                                  
     3                                  section .text
     4                                  
     5                                  global myPrintf
     6                                  
     7                                  myPrintf:
     8 00000000 57                          push rdi ; Аргумент (строка) передается в rdi
     9 00000001 EB00                        jmp myPrintfOrig
    10                                  
    11                                  ;------------------------------------------------------------------------------------------
    12                                  ; Функция аналог printf
    13                                  ; Entry: 
    14                                  ; Exit : 
    15                                  ; Destr: 
    16                                  ;------------------------------------------------------------------------------------------
    17                                  
    18                                  myPrintfOrig:
    19 00000003 5E                          pop rsi           ; Копируем адрес строки в rsi
    20 00000004 E810000000                  call strlen       ; Вычисляем длину строки
    21 00000009 4889C2                      mov rdx, rax      ; Длина строки для syscall
    22 0000000C B801000000                  mov rax, 1        ; Номер системного вызова write (1)
    23 00000011 BF01000000                  mov rdi, 1        ; Файловый дескриптор (1 = stdout)
    24 00000016 0F05                        syscall           ; Вызов системного вызова
    25                                  
    26 00000018 C3                          ret               ; Возврат из функции
    27                                  
    28                                  ;------------------------------------------------------------------------------------------
    29                                  ; Считает длину строки до тех пор пока не встретит нулевой символ
    30                                  ; Entry: rsi - адрес строки
    31                                  ; Exit : rax
    32                                  ; Destr: None
    33                                  ;------------------------------------------------------------------------------------------
    34                                  
    35                                  strlen:
    36 00000019 4889F0                      mov rax, rsi      ; Копируем адрес строки
    37                                  strlen_loop:
    38 0000001C 803800                      cmp byte [rax], 0 ; Сравниваем текущий символ с нулем
    39 0000001F 7405                        je strlen_done    ; Если нулевой байт, завершаем
    40 00000021 48FFC0                      inc rax           ; Переходим к следующему символу
    41 00000024 EBF6                        jmp strlen_loop   ; Повторяем
    42                                  strlen_done:
    43 00000026 4829F0                      sub rax, rsi      ; Вычисляем длину строки
    44 00000029 C3                          ret               ; Возврат из функции
    45                                  
    46                                  section .data
    47                                  
