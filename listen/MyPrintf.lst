     1                                  ; nasm -f elf64 -o MyPrintf.o -l MyPrintf.lst MyPrintf.s ; ld -s -o MyPrintf MyPrintf.o
     2                                  
     3                                  section .text
     4                                  
     5                                  global myPrintf
     6                                  
     7                                  myPrintf:
     8 00000000 57                          push rdi ; Аргумент (строка) передается в rdi
     9 00000001 E801000000                  call myPrintfOrig
    10 00000006 C3                          ret ;не предусмотрен, так как возвращаемся напрямую из myPrintfOrig
    11                                  
    12                                  ;------------------------------------------------------------------------------------------
    13                                  ; Функция аналог printf
    14                                  ; Entry: 
    15                                  ; Exit : 
    16                                  ; Destr: 
    17                                  ;------------------------------------------------------------------------------------------
    18                                  
    19                                  myPrintfOrig:
    20 00000007 4883C408                    add rsp, 8        ; Пропускаем функцию-трамплин
    21 0000000B 5E                          pop rsi           ; Копируем адрес строки в rsi
    22 0000000C E810000000                  call strlen       ; Вычисляем длину строки
    23 00000011 4889C2                      mov rdx, rax      ; Длина строки для syscall
    24 00000014 B801000000                  mov rax, 1        ; Номер системного вызова write (1)
    25 00000019 BF01000000                  mov rdi, 1        ; Файловый дескриптор (1 = stdout)
    26 0000001E 0F05                        syscall           ; Вызов системного вызова
    27                                  
    28 00000020 C3                          ret               ; Возврат из функции
    29                                  
    30                                  ;------------------------------------------------------------------------------------------
    31                                  ; Считает длину строки до тех пор пока не встретит нулевой символ
    32                                  ; Entry: rsi - адрес строки
    33                                  ; Exit : rax
    34                                  ; Destr: None
    35                                  ;------------------------------------------------------------------------------------------
    36                                  
    37                                  strlen:
    38 00000021 4889F0                      mov rax, rsi      ; Копируем адрес строки
    39                                  strlen_loop:
    40 00000024 803800                      cmp byte [rax], 0 ; Сравниваем текущий символ с нулем
    41 00000027 7405                        je strlen_done    ; Если нулевой байт, завершаем
    42 00000029 48FFC0                      inc rax           ; Переходим к следующему символу
    43 0000002C EBF6                        jmp strlen_loop   ; Повторяем
    44                                  strlen_done:
    45 0000002E 4829F0                      sub rax, rsi      ; Вычисляем длину строки
    46 00000031 C3                          ret               ; Возврат из функции
    47                                  
    48                                  section .data
    49                                  
