section .text

global myPrintf

myPrintf:
    push rdi ; Первый аргумент передается в rdi
    jmp myPrintfOrig

;---------------------------------------------------------------------------------------------------------
; Функция аналог printf
; Entry: 
; Exit : 
; Destr: 
;---------------------------------------------------------------------------------------------------------

myPrintfOrig:
    cld                          ; Занулил флаг направления
    pop rbx                      ; Кладём адрес строки в rsi
    lea rsi, [rel PRINTF_BUFFER] ; Положил в rsi адрес буфера

    .buffer_loop:
        call fillBuffer   ; Вызываем функцию для заполнения буфера, который мы будем распечатывать
        mov rax, 1        ; Номер системного вызова write (1)
        mov rdi, 1        ; Файловый дескриптор (1 = stdout)
        syscall           ; Вызов системного вызова
        cmp byte [rbx], 0 ; Сравниваем текущий символ с нулем
        jne .buffer_loop  ; Если не нулевой байт, повторяем

    ret ; Возврат из функции

;---------------------------------------------------------------------------------------------------------
; Заполняет буфер принтфа
; Entry: rbx - адрес строки
;        rsi - адрес буфера для записи
; Exit : rdx - длина строки для распечатки, для системного вызова
; Destr: rcx
;---------------------------------------------------------------------------------------------------------

fillBuffer:
    push rsi
    mov rcx, BUFFER_SIZE     ; Задал длину счётчика для заполнения буфера

    .buffer_loop:
        cmp byte [rbx], 0 ; Сравниваем текущий символ с нулем
        je .filling_done  ; Если нулевой байт, завершаем
        mov dl, [rbx]    
        mov [rsi], dl     ; В два mov-a переложили байт из аргумента в буфер
        inc rbx           ; Переходим на следующий символ
        inc rsi           ; Переходим на следующий символ
        loop .buffer_loop ; Повторяем, пока буфер не заполнится

    .filling_done:
        mov rdx, BUFFER_SIZE ; Положили в rdx длину буфера
        sub rdx, rcx         ; Вычислили, сколько нужно распечатать символов

    pop rsi
    ret ; Возврат из функции

;=========================================================================================================
section .rodata

BUFFER_SIZE equ 100 ; Длина буфера моего принтфа

;=========================================================================================================
section .data

PRINTF_BUFFER times BUFFER_SIZE db 0 ; Буфер моего принтфа
